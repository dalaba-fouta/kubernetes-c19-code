name: Construire et pousser les images Docker sur Docker Hub et mettre à jour le répertoire infra pour déclencher Argo CD

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: front
            directory: ./frontend
            image: dymafr/chap19-front
          - name: api-node
            directory: ./node-api
            image: dymafr/chap19-node

    steps:
    - name: Récupérer le code source
      uses: actions/checkout@v3

    - name: Obtenir le hash du dernier commit pour le tag des nouvelles images
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_SHA | cut -c1-7)

    - name: Connexion à Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Construire et pousser l'image ${{ matrix.name }}
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.directory }}
        file: ${{ matrix.directory }}/Dockerfile
        push: true
        tags: ${{ matrix.image }}:${{ steps.get_version.outputs.VERSION }}

    - name: Configurer la clé SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${{ secrets.GH_SSH_KEY }}" > deploy_key
        chmod 600 deploy_key
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ssh-add deploy_key
        
    - name: Mettre à jour les déploiements Kubernetes
      run: |
        git clone git@github.com:dymafr/kubernetes-c19-infra.git

        # Pour le frontend
        if [[ "${{ matrix.name }}" == "front" ]]; then
          sed -i "s|image: dymafr/chap19-front:[a-zA-Z0-9_.-]*|image: dymafr/chap19-front:${{ steps.get_version.outputs.VERSION }}|g" kubernetes-c19-infra/k8s/frontend.deployment.yaml
        fi

        # Pour l'API node
        if [[ "${{ matrix.name }}" == "api-node" ]]; then
          sed -i "s|image: dymafr/chap19-node:[a-zA-Z0-9_.-]*|image: dymafr/chap19-node:${{ steps.get_version.outputs.VERSION }}|g" kubernetes-c19-infra/k8s/api.deployment.yaml
        fi

        cd kubernetes-c19-infra
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add k8s/frontend.deployment.yaml k8s/api.deployment.yaml
        git commit -m "Mettre à jour la version de l'image à ${{ steps.get_version.outputs.VERSION }}"
        git push
