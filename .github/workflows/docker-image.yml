name: Construire et pousser les images Docker sur Docker Hub et mettre à jour le répertoire infra pour déclencher Argo CD

on:
  push:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: front
            dockerfile: ./frontend/Dockerfile
            image: dymafr/chap19-front
          - name: api-node
            dockerfile: ./node-api/Dockerfile
            image: dymafr/chap19-node

    steps:
    # Récupérer le code source
    - name: Checkout code
      uses: actions/checkout@v3

    # Obtenir le hash du dernier commit pour le tag des nouvelles images
    - name: Obtenir la version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_SHA | cut -c1-7)

    # Se connecter à Docker Hub
    - name: Connexion à Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    # Construire et pousser l'image Docker
    - name: Construire et pousser l'image ${{ matrix.name }}
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ matrix.image }}:${{ steps.get_version.outputs.VERSION }}
        
    # Mettre à jour le fichier de déploiement Kubernetes
    - name: Mettre à jour le déploiement Kubernetes
      run: |
        git clone https://github.com/dymafr/kubernetes-c19-infra.git

        # Pour le frontend
        if [[ "${{ matrix.name }}" == "front" ]]; then
          sed -i "s|image: dymafr/chap19-front:[a-zA-Z0-9_.-]*|image: dymafr/chap19-front:${{ steps.get_version.outputs.VERSION }}|g" kubernetes-c19-infra/k8s/frontend.deployment.yaml
        fi

        # Pour l'API node
        if [[ "${{ matrix.name }}" == "node" ]]; then
          sed -i "s|image: dymafr/chap19-node:[a-zA-Z0-9_.-]*|image: dymafr/chap19-node:${{ steps.get_version.outputs.VERSION }}|g" kubernetes-c19-infra/k8s/api.deployment.yaml
        fi

        cd kubernetes-c19-infra
        git config user.name "GitHub Action"
        git config user.email "action@github.com"
        git add k8s/frontend.deployment.yaml k8s/api.deployment.yaml
        git commit -m "Mettre à jour la version de l'image à ${{ steps.get_version.outputs.VERSION }}"
        git push
